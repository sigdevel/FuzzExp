@rijndael_hmac = (
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client',
'detail'   => 'rc file HMAC base64 key (tcp/22 ssh)',
'function' => \&generic_exec,
'cmdline'  => $default_client_hmac_args,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client',
'detail'   => 'validate HMAC type arg',
'function' => \&generic_exec,
'cmdline'  => "$default_client_hmac_args --hmac-digest-type invalid",
'positive_output_matches' => [qr/Invalid\shmac\sdigest\stype/i],
'exec_err' => $YES,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client',
'detail'   => 'rc file invalid HMAC type arg',
'function' => \&generic_exec,
'cmdline'  => "$default_client_args_no_get_key " .
"--rc-file $cf{'rc_hmac_invalid_type'}",
'positive_output_matches' => [qr/must\sbe\sone\sof/i],
'exec_err' => $YES,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client',
'detail'   => 'rc file HMAC+encryption keys not equal',
'function' => \&generic_exec,
'cmdline'  => "$default_client_args_no_get_key " .
"--rc-file $cf{'rc_hmac_equal_keys'}",
'positive_output_matches' => [qr/should\snot\sbe\sidentical/i],
'exec_err' => $YES,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'server',
'detail'   => 'rc file HMAC+encryption keys not equal',
'function' => \&generic_exec,
'cmdline' =>  "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_equal_keys_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'positive_output_matches' => [qr/should\snot\sbe\sidentical/i],
'exec_err' => $YES,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'server',
'detail'   => 'access file invalid HMAC type arg',
'function' => \&generic_exec,
'cmdline' =>  "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_invalid_type_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'positive_output_matches' => [qr/must\sbe\sone\sof/i],
'exec_err' => $YES,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client',
'detail'   => '--key-gen',
'function' => \&generic_exec,
'cmdline'  => "$fwknopCmd --key-gen",
'positive_output_matches' => [qr/^KEY_BASE64\:?\s\S{10}/,
qw/HMAC_KEY_BASE64\:?\s\S{10}/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'server',
'detail'   => '--key-gen',
'function' => \&generic_exec,
'cmdline'  => "$fwknopdCmd --key-gen",
'positive_output_matches' => [qr/^KEY_BASE64\:?\s\S{10}/,
qw/HMAC_KEY_BASE64\:?\s\S{10}/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client',
'detail'   => '--key-gen invalid (1)',
'function' => \&generic_exec,
'cmdline'  => "$fwknopCmd --key-gen --key-len 0",
'positive_output_matches' => [qr/Invalid\skey\slength/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'server',
'detail'   => '--key-gen invalid (1)',
'function' => \&generic_exec,
'cmdline'  => "$fwknopdCmd --key-gen --key-len 0",
'positive_output_matches' => [qr/Invalid\skey\slength/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client',
'detail'   => '--key-gen invalid (2)',
'function' => \&generic_exec,
'cmdline'  => "$fwknopCmd --key-gen --hmac-digest-type md4",
'positive_output_matches' => [qr/Invalid\shmac\sdigest\stype/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'server',
'detail'   => '--key-gen invalid (2)',
'function' => \&generic_exec,
'cmdline'  => "$fwknopdCmd --key-gen --hmac-digest-type md4",
'positive_output_matches' => [qr/Invalid\shmac\sdigest\stype/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client',
'detail'   => '--key-gen invalid (3)',
'function' => \&generic_exec,
'cmdline'  => "$fwknopCmd --key-gen --hmac-key-len 0",
'positive_output_matches' => [qr/Invalid\shmac\skey\slength/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'server',
'detail'   => '--key-gen invalid (3)',
'function' => \&generic_exec,
'cmdline'  => "$fwknopdCmd --key-gen --hmac-key-len 0",
'positive_output_matches' => [qr/Invalid\shmac\skey\slength/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client',
'detail'   => "--key-gen $uniq_keys key uniqueness",
'function' => \&key_gen_uniqueness,
'cmdline'  => "$fwknopCmd --key-gen",
'disable_valgrind' => $YES,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'server',
'detail'   => "--key-gen $uniq_keys key uniqueness",
'function' => \&key_gen_uniqueness,
'cmdline'  => "$fwknopdCmd --key-gen",
'disable_valgrind' => $YES,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client',
'detail'   => '--key-gen to file',
'function' => \&generic_exec,
'cmdline'  => "$fwknopCmd --key-gen --key-gen-file $key_gen_file",
'positive_output_matches' => [qr/Wrote.*\skeys/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'server',
'detail'   => '--key-gen to file',
'function' => \&generic_exec,
'cmdline'  => "$fwknopdCmd --key-gen --key-gen-file $key_gen_file",
'positive_output_matches' => [qr/Wrote.*\skeys/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle (tcp/22 ssh)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => '3 cycles (tcp/22 ssh)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
'client_cycles_per_server_instance' => 3,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle, include (1)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'include1_hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
'server_positive_output_matches' => [
qr/SOURCE\s.*9\.9\.9\.9/,
qr/SOURCE\s.*ANY/,
qr/SOURCE\s.*99\.9\.9\.9/,
qr/SOURCE\s.*123\.3\.3\.3/
],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle prepend',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'prepend_fwknopd'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
'server_positive_output_matches' => [
qr/\s\-I\sFWKNOP_INPUT.*\s\-s\s127.0.0.2/
],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle, include (2)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'include_def_hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle, include (3)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} --access-folder conf/access-include/defaults " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'server_receive_re' => qr/stanza\s\
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle, include keys (1)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'include_keys1_hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'server_receive_re' => qr/stanza\s\
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'cycle DESTINATION accepted (1)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'spa_destination'} " .
"-a $cf{'hmac_spa_destination_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_crdated' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
'server_positive_output_matches' => [qr/\b$fake_ip\s.*$loopback_ip\b/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'cycle DESTINATION accepted (2)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'spa_destination'} " .
"-a $cf{'hmac_spa_destination2_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'cycle DESTINATION accepted (3)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'spa_destination'} " .
"-a $cf{'hmac_spa_destination3_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'cycle DESTINATION filtered (1)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'spa_destination'} " .
"-a $cf{'hmac_spa_destination4_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $REQUIRE_NO_NEW_RULE,
'client_pkt_tries' => 2,
'server_receive_re' => qr/SPA\spacket\s.*filtered\sby\sSOURCE.*DEST/,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'cycle DESTINATION filtered (2)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'spa_destination'} " .
"-a $cf{'hmac_spa_destination5_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $REQUIRE_NO_NEW_RULE,
'client_pkt_tries' => 2,
'server_receive_re' => qr/SPA\spacket\s.*filtered\sby\sSOURCE.*DEST/,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => '--no-ipt-check-support',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file " .
"$intf_str --no-ipt-check-support --no-firewd-check-support",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => '3 cycles --no-ipt-check-support',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file " .
"$intf_str --no-ipt-check-support --no-firewd-check-support",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
'client_cycles_per_server_instance' => 3,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'invalid _exp_ prefix',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file " .
"$intf_str --no-ipt-check-support --no-firewd-check-support",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
'insert_duplicate_rule_while_running' => $YES,
'fw_dupe_rule_args' => [
"-A FWKNOP_INPUT -p 6 -s $fake_ip -d 0.0.0.0/0 " .
"--dport 22 -m comment --comment _exp*\/\sto\:$iEPT"
],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'invalid _exp_ prefix (2)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
'insert_duplicate_rule_while_running' => $YES,
'fw_dupe_rule_args' => [
"-A FWKNOP_INPUT -p 6 -s $fake_ip -d 0.0.0.0/0 " .
"--dport 22 -m comment --comment _exp_NNN -j ACCEPT"
],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => '--no-ipt-check dupe rule',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file " .
"$intf_str --no-ipt-check-support --no-firewd-check-support",
'fw_rule_created' => $REQUIRE_NO_NEW_RULE,
'key_file' => $cf{'rc_hmac_b64_key'},
'insert_duplicate_rule_while_running' => $YES,
'fw_dupe_rule_args' => [
"-A FWKNOP_INPUT -p 6 -s $fake_ip -d 0.0.0.0/0 " .
"--dport 22 -m comment --comment EXP_TIME -j ACCEPT"
],
'server_positive_output_matches'
=> [qr/rule_exists_no_chk_support.*tcp.*22.*already exists/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => '--no-ipt-check != dupe rule',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file " .
"$intf_str --no-ipt-check-support --no-firewd-check-support",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
'insert_duplicate_rule_while_running' => $YES,
'fw_dupe_rule_args' => [
"-A FWKNOP_INPUT -p 6 -s $fake_ip -d 0.0.0.0/0 " .
"--dport 1234 -m comment --comment EXP_TIME -j ACCEPT"
],
'server_negative_output_matches'
=> [qr/rule_exists_no_chk_support.*tcp.*22.*already exists/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'rm rule mid-cycle',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'rm_rule_mid_cycle' => $YES,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'dupe rule mid-cycle',
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $REQUIRE_NO_NEW_RULE,
'key_file' => $cf{'rc_hmac_b64_key'},
'insert_duplicate_rule_while_running' => $YES,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => '--no-ipt-check-support udp/53',
'function' => \&spa_cycle,
'cmdline' => "$fwknopCmd -A udp/53 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str " .
"--no-ipt-check-support --no-firewd-check-support",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => "$FW_TYPE OUTPUT chain",
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => qq/$fwknopdCmd -c $cf{"${fw_conf_prefix}_output_chain"} -a $cf{'hmac_access'} / .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle rc defaults',
'function' => \&spa_cycle,
'cmdline'  => $client_hmac_rc_defaults,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_defaults'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle time offset mins',
'function' => \&spa_cycle,
'cmdline'  => "$default_client_args_no_get_key " .
"--rc-file $cf{'rc_hmac_time_offset_mins'}",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'disable_aging'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_time_offset_mins'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle time offset hours',
'function' => \&spa_cycle,
'cmdline'  => "$default_client_args_no_get_key " .
"--rc-file $cf{'rc_hmac_time_offset_hours'}",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'disable_aging'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_time_offset_hours'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle time offset days',
'function' => \&spa_cycle,
'cmdline'  => "$default_client_args_no_get_key " .
"--rc-file $cf{'rc_hmac_time_offset_days'}",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'disable_aging'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_time_offset_days'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'replay attack detection',
'function' => \&replay_detection,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'key_file' => $cf{'rc_hmac_b64_key'},
'server_positive_output_matches' => [qr/Replay\sdetected\sfrom\ssource\sIP/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'detect replay (Rijndael prefix)',
'function' => \&replay_detection,
'cmdline'  => $default_client_hmac_args,
'pkt_prefix' => 'U2FsdGVkX1',
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'key_file' => $cf{'rc_hmac_b64_key'},
'server_positive_output_matches' => [qr/Data\sis\snot\sa\svalid\sSPA\smessage\sformat/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'detect replay (GnuPG prefix)',
'function' => \&replay_detection,
'cmdline'  => $default_client_hmac_args,
'pkt_prefix' => 'hQ',
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'key_file' => $cf{'rc_hmac_b64_key'},
'server_positive_output_matches' => [qr/Args\scontain\sinvalid\sdata/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'server',
'detail'   => '--pcap-file processing',
'function' => \&process_pcap_file_directly,
'cmdline'  => '',
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file " .
"--pcap-file $multi_pkts_pcap_file --foreground $verbose_str " .
"--verbose --verbose --verbose",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
},
{
'category' => 'Rijndael+HMAC',
'subcategover',
'detail'   => '--pcap-file SPA over http',
'function' => \&process_pcap_file_directly,
'cmdline'  => '',
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'spa_over_http'} -a $cf{'hmac_sha256_access'} " .
"-d $default_digest_file -p $default_pid_file " .
"--pcap-file $spa_over_http_pcap_file --foreground $verbose_str " .
"--pcap-filter 'port 80' " .
"--verbose --verbose --verbose",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'server',
'detail'   => '--pcap-file http X-Forwarded-For',
'function' => \&process_pcap_file_directly,
'cmdline'  => '',
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'spa_x_forwarded_for'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file " .
"--pcap-file $spa_x_forwarded_for_pcap_file --foreground $verbose_str " .
"--pcap-filter 'port 80' " .
"--verbose --verbose --verbose",
'server_positive_output_matches' => [qr/Added access rule.*\sfor 1.2.3.4/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'server',
'detail'   => '--pcap-file any User-Agent',
'function' => \&process_pcap_file_directly,
'cmdline'  => '',
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'spa_allow_any_user_agent'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file " .
"--pcap-file $spa_allow_any_user_agent_pcap_file --foreground $verbose_str " .
"--pcap-filter 'port 80' " .
"--verbose --verbose --verbose",
'server_positive_output_matches' => [qr/Added access rule.*\sfor 1.2.3.4/],
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'server',
'detail'   => '--pcap-file with Ethernet FCS header',
'function' => \&process_pcap_file_directly,
'cmdline'  => '',
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file " .
"--pcap-file $fcs_pcap_file --foreground $verbose_str " .
"--verbose --verbose --verbose",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => "$FW_TYPE custom INPUT chain",
'function' => \&spa_cycle,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => qq/$fwknopdCmd -c $cf{"${fw_conf_prefix}_custom_input_chain"} -a $cf{'hmac_access'} / .
"-d $default_digest_file -p $default_pid_file $intf_str",
'server_positive_output_matches' => [qr/FWKNOP_INPUT_TEST\s\(1\sreferences/],
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'server_conf'     => $cf{"${fw_conf_prefix}_custom_input_chain"},
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => '--get-hmac-key (tcp/22 ssh)',
'function' => \&spa_cycle,
'cmdline'  => $default_client_args .
" --get-hmac-key $local_hmac_key_file",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_get_key_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'get_key' => {'file' => $local_key_file,
'key' => 'rijndaelkey'},
'get_hmac_key' => {'file' => $local_hmac_key_file,
'key' => 'hmackey'},
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => "$FW_TYPE - no flush at init",
'function' => \&iptables_no_flush_init_exit,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => qq/$fwknopdCmd -c $cf{"${fw_conf_prefix}_no_flush_init"} -a $cf{'hmac_access'} / .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => "$FW_TYPE - no flush at exit",
'function' => \&iptables_no_flush_init_exit,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => qq/$fwknopdCmd -c $cf{"${fw_conf_prefix}_no_flush_exit"} -a $cf{'hmac_access'} / .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => "$FW_TYPE - no flush at init or exit",
'function' => \&iptables_no_flush_init_exit,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => qq/$fwknopdCmd -c $cf{"${fw_conf_prefix}_no_flush_init_or_exit"} -a $cf{'hmac_access'} / .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => '-f client timeout',
'function' => \&spa_cycle,
'cmdline'  => "$default_client_hmac_args -f 4",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => '-f -1 client timeout err',
'function' => \&generic_exec,
'cmdline'  => qq|$default_client_hmac_args -f "-2"|,
'positive_output_matches' => [qr/timeout\smust\sbe\swithin/],
'exec_err' => $YES,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client->server compatibility',
'detail'   => 'Cygwin Windows 2008',
'function' => \&backwards_compatibility,
'no_ip_check' => 1,
'pkt' =>
'+NHb5ytzAppxOdX/sy48+nvGNzsR9Bq6wbaakwihbepSDlZWpBwG7HOv0V' .
'1Lwzpt5/vYMkmzCr1aXdgBPJVkqMQQZppjkxMApQGbX0MXLPG+aqP9MGWr' .
'mpOVjSY8vW5uc8wOhnNJFtu77jvR7MIDFOkNO16LbLV+IxQOmoJHE2+lUH' .
'1nvudMWCORI/tzK/QU5YWFAXbbjFhR6RgvdWfzDhwxAEpNfd5gE',
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'disable_aging'} -a $cf{'hmac_cygwin_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'server_positive_output_matches' => [qr/with expire time/],
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'Android compatibility',
'detail'   => 'v4.4',
'function' => \&backwards_compatibility,
'no_ip_check' => 1,
'pkt' =>
'+8fP34T9Vjs50Yke5tNTz7YnsDbQUcp6zaaJTzVOgRuNXyhiZKL5' .
'UpaC2neRkqgjSlG6/qJSKXIuXBKR4LFS3rX2ZwrOkfBGKJeXe8S2' .
'uZex9RjOr/8SwS45Q+Kt3J6QsShXU4cxz09Cv+bi7+08/bGCyVdh' .
'vYNwogIhEkcqS79+JNR3lSBEBrOY4hoOKRRAYw41yI5cBCdc',
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'disable_aging'} -a $cf{'hmac_android_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'server_positive_output_matches' => [qr/with expire time/],
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'short IP 1.1.1.1 (ssh)',
'function' => \&spa_cycle,
'cmdline' => "$fwknopCmd -A tcp/22 -a 1.1.1.1 -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
'no_ip_check' => 1
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'long IP 123.123.123.123 (ssh)',
'function' => \&spa_cycle,
'cmdline' => "$fwknopCmd -A tcp/22 -a 123.123.123.123 -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
'no_ip_check' => 1
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle (tcp/23)',
'function' => \&spa_cycle,
'cmdline' => "$fwknopCmd -A tcp/23 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'non-b64 HMAC key (tcp/22 ssh)',
'function' => \&spa_cycle,
'cmdline' => "$fwknopCmd -A tcp/22 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key2'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_no_b64_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key2'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle (tcp/9418)',
'function' => \&spa_cycle,
'cmdline' => "$fwknopCmd -A tcp/9418 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle (tcp/60001)',
'function' => \&spa_cycle,
'cmdline' => "$fwknopCmd -A tcp/60001 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'multiple client invocations (1)',
'function' => \&spa_cycle,
'cmdline'  => "LD_LIBRARY_PATH=$lib_dir " .
"$fwknopCmd -A tcp/22 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str " .
"&& LD_LIBRARY_PATH=$lib_dir " .
"$fwknopCmd -A tcp/23 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str " .
"&& LD_LIBRARY_PATH=$lib_dir " .
"$fwknopCmd -A tcp/24 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'server_positive_num_matches' => [
{ 're' => qr/Removed\srule/, 'num' => 3 }
],
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'relax_receive_cycle_num_check' => $YES,
'weak_server_receive_check' => $YES,
'sleep_cycles' => 10,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => "iptables garbage collect rule",
'function' => \&spa_cycle,
'cmdline'  =>
qq|iptables -A FWKNOP_INPUT -p tcp --dport 22 -s $fake_ip | .
qq|-m comment --comment "_exp_1234" -j ACCEPT | .
"&& LD_LIBRARY_PATH=$lib_dir $valgrind_str $fwknopCmd -A tcp/22 -a $fake_ip " .
"-D $loopback_ip --rc-file $cf{'rc_hmac_b64_key'} $verbose_str ",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'server_positive_output_matches' => [
qr/Removed\srule\s1/,
qr/Removed\srule.*expire time of 1234/,
],
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
(catch (r 'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'multi port (tcp/60001,udp/60001)',
'function' => \&spa_cycle,
'cmdline' => "$fwknopCmd -A tcp/60001,udp/60001 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => "$FW_TYPE multi port re search (1)",
'function' => \&spa_cycle,
'cmdline' => "$fwknopCmd -A tcp/60001,udp/60001 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'server_positive_output_matches' => [qr/^1\s+ACCEPT\s+tcp.*dpt:60001/,
qr/^2\s+ACCEPT\s+udp.*dpt:60001/],
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'random SPA port (tcp/22)',
'function' => \&spa_cycle,
'cmdline'  => "$default_client_hmac_args -r",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str " .
qq|-P "udp"|,
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'random SPA port (portrange filter)',
'function' => \&spa_cycle,
'cmdline'  => "$default_client_hmac_args -r",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'portrange_filter'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'random SPA port (via rc RAND_PORT)',
'function' => \&spa_cycle,
'cmdline' => "$fwknopCmd -A tcp/22 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_rand_port_hmac_b64_key'} $verbose_str -r",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str " .
qq|-P "udp"|,
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_rand_port_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'complete cycle simple keys',
'function' => \&spa_cycle,
'cmdline'  => "$default_client_args_no_get_key " .
"--rc-file $cf{'rc_hmac_simple_key'}",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_simple_keys_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_simple_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'spoof username cycle (tcp/22)',
'function' => \&spa_cycle,
'cmdline'  => "SPOOF_USER=$spoof_user LD_LIBRARY_PATH=$lib_dir $valgrind_str " .
"$fwknopCmd -A tcp/22 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'spoof user via --spoof-user',
'function' => \&spa_cycle,
'cmdline'  => "LD_LIBRARY_PATH=$lib_dir $valgrind_str " .
"$fwknopCmd -A tcp/22 --spoof-user $spoof_user -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'spoof src IP 3.3.3.3 (tcp/22)',
'function' => \&spa_cycle,
'cmdline'  => "LD_LIBRARY_PATH=$lib_dir $valgrind_str " .
"$fwknopCmd -A tcp/22 -a $fake_ip -P udpraw -Q 3.3.3.3 -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{    "-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'rc file spoof src IP (tcp/22)',
'function' => \&spa_cycle,
'cmdline'  => "LD_LIBRARY_PATH=$lib_dir $valgrind_str " .
"$fwknopCmd -A tcp/22 -a $fake_ip -D $loopback_ip --rc-file " .
"$cf{'rc_hmac_spoof_src_b64_key'} $verbose_str",
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_spoof_src_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'rotate digest file',
'function' => \&rotate_digest_file,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd -c $cf{'def'} -a $cf{'hmac_access'} " .
"-d $default_digest_file -p $default_pid_file $intf_str --rotate-digest-cache",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client',
'detail'   => "--save-packet $tmp_pkt_file",
'function' => \&client_save_spa_pkt,
'cmdline'  => "$default_client_hmbc_args " .
"--save-args-file $tmp_args_file " .
"--save-packet $tmp_pkt_file",
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client',
'detail'   => "--last-cmd",
'function' => \&run_last_args,
'cmdline' => "$fwknopCmd --last-cmd --save-args-file $tmp_args_file " .
"$verbose_str",
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'permissions check cycle (tcp/22)',
'function' => \&permissions_check,
'cmdline'  => $default_client_hmac_args,
'fwknopd_cmdline' => "$fwknopdCmd $default_server_hmac_conf_args $intf_str",
'server_positive_output_matches' => [qr/permissions\sshould\sonly\sbe\suser/],
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'SPA through HTTP proxy',
'function' => \&generic_exec,
'cmdline'  => "$default_client_hmac_args -H $resolve_url_with_port --test",
'no_ip_check' => 1,
'fw_rule_created' => $REQUIRE_NO_NEW_RULE,
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'client IP resolve (tcp/22 ssh)',
'function' => \&spa_cycle,
'cmdline'  => $client_ip_resolve_hmac_args,
'no_ip_check' => 1,
'fwknopd_cmdline' => "$fwknopdCmd $default_server_hmac_conf_args $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
'key_file' => $cf{'rc_hmac_b64_key'},
},
{
'category' => 'Rijndael+HMAC',
'subcategory' => 'client+server',
'detail'   => 'client IP --resolve-url <def>',
'function' => \&spa_cycle,
'cmdline'  => "$client_ip_resolve_hmac_args " .
"--resolve-url https://www.cipherdyne.org/cgi-bin/myip",
'no_ip_check' => 1,
'positive_output_matches' => [qr/wget/],
'fwknopd_cmdline' => "$fwknopdCmd $default_server_hmac_conf_args $intf_str",
'fw_rule_created' => $NEW_RULE_REQUIRED,
'fw_rule_removed' => $NEW_RULE_REMOVED,
