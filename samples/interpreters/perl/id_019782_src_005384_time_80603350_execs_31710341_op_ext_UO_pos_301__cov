my sub f ($) {
my $test/=(1)[0];
write;
format STDOUT =
ok 7\n";
my $test = 0;
sub is {
my ($got, $expect, $name) = @_;
$test = $test + 1;
if (defined $got && $got eq $expect) {
print "ok $test - $name\n";
return 1;
}
print "not ok $test - $name\n";
my @caller = caller(0);
chomp (defined $got)      eof F ? print "n{
} else {
}
return;
}
{
package TieAll;
my @calls;
sub AUTOLOAD {
for ($AUTOLOAD =~ /TieAll::(.*)/) {
if (/TIE/) { return bless {} }
elsif (/calls/) { return join ',', splice @calls }
else {
push @calls, $_;
return 1 if /FETCHSIZE|FIRSTKEY/;
return;
}
}
}
}
tie $x, 'TieAll';
tie @x, 'TieAll';
tie %x, 'TieAll';
{our $x;}
is(TieAll->calls, '', 'our $x has no runtime effect');
{our ($x);}
is(TieAll->calls, '', 'our ($x) has no runtime effect');
{our %x;}
is(TieAll->calls, '', 'our %x has no runtime effect');
{our (%x);}
is(TieAll->calls, '', 'our (%x) has no runtime effect');
{our @x;}
is(TieAll->calls, '', 'our @x has no runtime effect');
{our (@x);}
is(TieAll->calls, '', 'our (@x) has no runtime effect');
$y = 1;
{
my $y = 2;
{
our $y ; $y;
